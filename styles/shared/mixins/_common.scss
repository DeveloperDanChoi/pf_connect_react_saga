@import './buttons.scss';

.inputDefault {
  border: solid 1px gray-02;
  padding: 15px 12px;
  border-radius: 4px;
}

@mixin input-basic {
  @extend .inputDefault;
  &::placeholder {
    // color: gray-162;
    font-size: 16px;
  }
}

@mixin select-basic {
  @extend .inputDefault;
//   color: gray-162;
}

@mixin responsive-innerbox($top:0,$bottom:$top) {
  position: relative;
  width: 1048px;
  min-height: auto;
  margin: $top auto $bottom;
    @include tablet{ 
      width: calc(100% - 36px); 
  }
}

@mixin title($emColor: $jnd-third-base-color) {
  font-weight: 500;
  margin: 0 auto;
  font-size: 41.5px;
  line-height: 49.5px;
  span {
    color: $emColor;
  }
}
@mixin banner-title($emColor: $jnd-third-base-color) {
  @include position(50%, 50%);
  @include title($emColor);
  max-width: 80%;
  text-align: center;
}

@mixin clear {
  &:after {
    content: '';
    display: block;
    float: none;
    clear: both;
  }
}

@mixin position($x, $y) {
  position: absolute;
  left: $x;
  top: $y;
  @if $x == 50% and $y == 50% {
    transform: translate(-50%, -50%);
  } @else if $y == 50% {
    transform: translateY(-50%);
  } @else if $x == 50% {
    transform: translateX(-50%);
  }
}
// @mixin title
@mixin vertical($vertical-align:middle) {
  display: inline-block;
  vertical-align: $vertical-align;
}
@mixin pseudoDefault($w, $h) {
  position: absolute;
  content: '';
  width: $w;
  height: $h;
}

@mixin flex($item:center, $content:space-between) {
  @each $prefix in -ms-, -webkit-, '' {
    #{$prefix}align-items: $item;
    #{$prefix}justify-content: $content;
  }
  display: flex;
  flex-wrap: wrap;
}

@mixin box($width, $height ,$box:block) {
  display: $box;
  width: $width;
  height: $height;
}

@mixin font($size:13px, $weight : 400) {
  font-size:$size;
  font-weight: $weight;
}

@mixin rounded($radius: 4px) {
  @each $prefix in -moz-, -o-, -webkit-, '' {
    #{$prefix}border-radius: $radius;
  }
}

@mixin transform($property...) {
  @each $prefix in -ms-, -webkit-, -o-, -moz-, '' {
    #{$prefix}transform: $property;
  }
}

@mixin spanIcon($padding:19px) {
  position: relative;  
  padding-left: $padding;
    &::before{
      @include position(0,1px);
    }
}

@mixin opacity($value) {
  @each $prefix in -ms-, -webkit-, -o-, -moz-, '' {
    #{$prefix}opacity: $value;
  }
}

@mixin ellipsis($line: 1, $lineHeight: 1.2em) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space:nowrap;
  @if $line > 1 {
    display: -webkit-box;
    -webkit-line-clamp: $line; /* 라인수 */
    -webkit-box-orient: vertical;
    word-wrap: break-word;
    white-space:unset;
  }
  line-height: $lineHeight;
  height: calc(#{$line} * #{$lineHeight});
}

@mixin cardBox() {
 @include rounded(8px);
  @include themed() {
    background: t($bg-white-01-color);
    box-shadow:0px 4px 13px t($box-shadow);
  }
}
@mixin font-set(){
    /* use !important to prevent issues with browser extensions that change fonts */
    font-family: 'icomoon' !important;
    speak: never;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
  
    /* Better Font Rendering =========== */
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

/*반응형 화면 크기*/
$jnd-pc-min-width: 1024px;
$jnd-tablet-min-width: 768px;
$jnd-tablet-max-width: 1023px;

/*반응형, 브라우저 크기가 768이상, 1023px 이하일때*/
@mixin tablet{
  @media all and (max-width: $jnd-tablet-max-width){
    @content;
  }
}

/*반응형, 브라우저 크기가 1024px 이상일때*/
@mixin desktop{
  @media (min-width: $jnd-pc-min-width){
    @content;
  }
}
